cmake_minimum_required(VERSION 3.15)
project(FoxgloveWebSocket CXX)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(LIB_PATH "/usr/local/lib") 
set(INCLUDE_PATH "/usr/local/include")
set(COMMON_INCLUDE_DIR "${PROJECT_SOURCE_DIR}/include")

include_directories(${COMMON_INCLUDE_DIR} ${INCLUDE_PATH})

find_package(OpenSSL REQUIRED)
find_package(OpenCV REQUIRED)
include_directories( ${OpenCV_INCLUDE_DIRS} )   

add_subdirectory(foxglove_pb)

add_executable(server_protobuf src/server_protobuf.cpp)
target_include_directories(server_protobuf PRIVATE ${PROJECT_SOURCE_DIR}/include)
target_link_libraries(server_protobuf PRIVATE ${LIB_PATH}/libfoxglove_websocket.a)
target_link_libraries(server_protobuf PRIVATE foxglove_pb)
target_link_libraries(server_protobuf PRIVATE protobuf)
target_link_libraries(server_protobuf PRIVATE pthread)
target_link_libraries(server_protobuf PRIVATE OpenSSL::SSL OpenSSL::Crypto)
target_link_libraries(server_protobuf PRIVATE z)

add_executable(rm_robot_sim src/rm_robot_sim.cpp include/robot/robot_armor.hpp)
target_include_directories(rm_robot_sim PRIVATE ${PROJECT_SOURCE_DIR}/include)
target_link_libraries(rm_robot_sim PRIVATE ${LIB_PATH}/libfoxglove_websocket.a)
target_link_libraries(rm_robot_sim PRIVATE foxglove_pb)
target_link_libraries(rm_robot_sim PRIVATE protobuf)
target_link_libraries(rm_robot_sim PRIVATE pthread)
target_link_libraries(rm_robot_sim PRIVATE OpenSSL::SSL OpenSSL::Crypto)
target_link_libraries(rm_robot_sim PRIVATE z)
target_link_libraries(rm_robot_sim PRIVATE  ${OpenCV_LIBS})