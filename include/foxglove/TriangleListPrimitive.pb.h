// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: foxglove/TriangleListPrimitive.proto

#ifndef PROTOBUF_INCLUDED_foxglove_2fTriangleListPrimitive_2eproto
#define PROTOBUF_INCLUDED_foxglove_2fTriangleListPrimitive_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "foxglove/Color.pb.h"
#include "foxglove/Point3.pb.h"
#include "foxglove/Pose.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_foxglove_2fTriangleListPrimitive_2eproto 

namespace protobuf_foxglove_2fTriangleListPrimitive_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_foxglove_2fTriangleListPrimitive_2eproto
namespace foxglove {
class TriangleListPrimitive;
class TriangleListPrimitiveDefaultTypeInternal;
extern TriangleListPrimitiveDefaultTypeInternal _TriangleListPrimitive_default_instance_;
}  // namespace foxglove
namespace google {
namespace protobuf {
template<> ::foxglove::TriangleListPrimitive* Arena::CreateMaybeMessage<::foxglove::TriangleListPrimitive>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace foxglove {

// ===================================================================

class TriangleListPrimitive : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:foxglove.TriangleListPrimitive) */ {
 public:
  TriangleListPrimitive();
  virtual ~TriangleListPrimitive();

  TriangleListPrimitive(const TriangleListPrimitive& from);

  inline TriangleListPrimitive& operator=(const TriangleListPrimitive& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TriangleListPrimitive(TriangleListPrimitive&& from) noexcept
    : TriangleListPrimitive() {
    *this = ::std::move(from);
  }

  inline TriangleListPrimitive& operator=(TriangleListPrimitive&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TriangleListPrimitive& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TriangleListPrimitive* internal_default_instance() {
    return reinterpret_cast<const TriangleListPrimitive*>(
               &_TriangleListPrimitive_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(TriangleListPrimitive* other);
  friend void swap(TriangleListPrimitive& a, TriangleListPrimitive& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TriangleListPrimitive* New() const final {
    return CreateMaybeMessage<TriangleListPrimitive>(NULL);
  }

  TriangleListPrimitive* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<TriangleListPrimitive>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const TriangleListPrimitive& from);
  void MergeFrom(const TriangleListPrimitive& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TriangleListPrimitive* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .foxglove.Point3 points = 2;
  int points_size() const;
  void clear_points();
  static const int kPointsFieldNumber = 2;
  ::foxglove::Point3* mutable_points(int index);
  ::google::protobuf::RepeatedPtrField< ::foxglove::Point3 >*
      mutable_points();
  const ::foxglove::Point3& points(int index) const;
  ::foxglove::Point3* add_points();
  const ::google::protobuf::RepeatedPtrField< ::foxglove::Point3 >&
      points() const;

  // repeated .foxglove.Color colors = 4;
  int colors_size() const;
  void clear_colors();
  static const int kColorsFieldNumber = 4;
  ::foxglove::Color* mutable_colors(int index);
  ::google::protobuf::RepeatedPtrField< ::foxglove::Color >*
      mutable_colors();
  const ::foxglove::Color& colors(int index) const;
  ::foxglove::Color* add_colors();
  const ::google::protobuf::RepeatedPtrField< ::foxglove::Color >&
      colors() const;

  // repeated fixed32 indices = 5;
  int indices_size() const;
  void clear_indices();
  static const int kIndicesFieldNumber = 5;
  ::google::protobuf::uint32 indices(int index) const;
  void set_indices(int index, ::google::protobuf::uint32 value);
  void add_indices(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      indices() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_indices();

  // .foxglove.Pose pose = 1;
  bool has_pose() const;
  void clear_pose();
  static const int kPoseFieldNumber = 1;
  private:
  const ::foxglove::Pose& _internal_pose() const;
  public:
  const ::foxglove::Pose& pose() const;
  ::foxglove::Pose* release_pose();
  ::foxglove::Pose* mutable_pose();
  void set_allocated_pose(::foxglove::Pose* pose);

  // .foxglove.Color color = 3;
  bool has_color() const;
  void clear_color();
  static const int kColorFieldNumber = 3;
  private:
  const ::foxglove::Color& _internal_color() const;
  public:
  const ::foxglove::Color& color() const;
  ::foxglove::Color* release_color();
  ::foxglove::Color* mutable_color();
  void set_allocated_color(::foxglove::Color* color);

  // @@protoc_insertion_point(class_scope:foxglove.TriangleListPrimitive)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::foxglove::Point3 > points_;
  ::google::protobuf::RepeatedPtrField< ::foxglove::Color > colors_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > indices_;
  mutable int _indices_cached_byte_size_;
  ::foxglove::Pose* pose_;
  ::foxglove::Color* color_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_foxglove_2fTriangleListPrimitive_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TriangleListPrimitive

// .foxglove.Pose pose = 1;
inline bool TriangleListPrimitive::has_pose() const {
  return this != internal_default_instance() && pose_ != NULL;
}
inline const ::foxglove::Pose& TriangleListPrimitive::_internal_pose() const {
  return *pose_;
}
inline const ::foxglove::Pose& TriangleListPrimitive::pose() const {
  const ::foxglove::Pose* p = pose_;
  // @@protoc_insertion_point(field_get:foxglove.TriangleListPrimitive.pose)
  return p != NULL ? *p : *reinterpret_cast<const ::foxglove::Pose*>(
      &::foxglove::_Pose_default_instance_);
}
inline ::foxglove::Pose* TriangleListPrimitive::release_pose() {
  // @@protoc_insertion_point(field_release:foxglove.TriangleListPrimitive.pose)
  
  ::foxglove::Pose* temp = pose_;
  pose_ = NULL;
  return temp;
}
inline ::foxglove::Pose* TriangleListPrimitive::mutable_pose() {
  
  if (pose_ == NULL) {
    auto* p = CreateMaybeMessage<::foxglove::Pose>(GetArenaNoVirtual());
    pose_ = p;
  }
  // @@protoc_insertion_point(field_mutable:foxglove.TriangleListPrimitive.pose)
  return pose_;
}
inline void TriangleListPrimitive::set_allocated_pose(::foxglove::Pose* pose) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pose_);
  }
  if (pose) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pose = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pose, submessage_arena);
    }
    
  } else {
    
  }
  pose_ = pose;
  // @@protoc_insertion_point(field_set_allocated:foxglove.TriangleListPrimitive.pose)
}

// repeated .foxglove.Point3 points = 2;
inline int TriangleListPrimitive::points_size() const {
  return points_.size();
}
inline ::foxglove::Point3* TriangleListPrimitive::mutable_points(int index) {
  // @@protoc_insertion_point(field_mutable:foxglove.TriangleListPrimitive.points)
  return points_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::foxglove::Point3 >*
TriangleListPrimitive::mutable_points() {
  // @@protoc_insertion_point(field_mutable_list:foxglove.TriangleListPrimitive.points)
  return &points_;
}
inline const ::foxglove::Point3& TriangleListPrimitive::points(int index) const {
  // @@protoc_insertion_point(field_get:foxglove.TriangleListPrimitive.points)
  return points_.Get(index);
}
inline ::foxglove::Point3* TriangleListPrimitive::add_points() {
  // @@protoc_insertion_point(field_add:foxglove.TriangleListPrimitive.points)
  return points_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::foxglove::Point3 >&
TriangleListPrimitive::points() const {
  // @@protoc_insertion_point(field_list:foxglove.TriangleListPrimitive.points)
  return points_;
}

// .foxglove.Color color = 3;
inline bool TriangleListPrimitive::has_color() const {
  return this != internal_default_instance() && color_ != NULL;
}
inline const ::foxglove::Color& TriangleListPrimitive::_internal_color() const {
  return *color_;
}
inline const ::foxglove::Color& TriangleListPrimitive::color() const {
  const ::foxglove::Color* p = color_;
  // @@protoc_insertion_point(field_get:foxglove.TriangleListPrimitive.color)
  return p != NULL ? *p : *reinterpret_cast<const ::foxglove::Color*>(
      &::foxglove::_Color_default_instance_);
}
inline ::foxglove::Color* TriangleListPrimitive::release_color() {
  // @@protoc_insertion_point(field_release:foxglove.TriangleListPrimitive.color)
  
  ::foxglove::Color* temp = color_;
  color_ = NULL;
  return temp;
}
inline ::foxglove::Color* TriangleListPrimitive::mutable_color() {
  
  if (color_ == NULL) {
    auto* p = CreateMaybeMessage<::foxglove::Color>(GetArenaNoVirtual());
    color_ = p;
  }
  // @@protoc_insertion_point(field_mutable:foxglove.TriangleListPrimitive.color)
  return color_;
}
inline void TriangleListPrimitive::set_allocated_color(::foxglove::Color* color) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(color_);
  }
  if (color) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      color = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, color, submessage_arena);
    }
    
  } else {
    
  }
  color_ = color;
  // @@protoc_insertion_point(field_set_allocated:foxglove.TriangleListPrimitive.color)
}

// repeated .foxglove.Color colors = 4;
inline int TriangleListPrimitive::colors_size() const {
  return colors_.size();
}
inline ::foxglove::Color* TriangleListPrimitive::mutable_colors(int index) {
  // @@protoc_insertion_point(field_mutable:foxglove.TriangleListPrimitive.colors)
  return colors_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::foxglove::Color >*
TriangleListPrimitive::mutable_colors() {
  // @@protoc_insertion_point(field_mutable_list:foxglove.TriangleListPrimitive.colors)
  return &colors_;
}
inline const ::foxglove::Color& TriangleListPrimitive::colors(int index) const {
  // @@protoc_insertion_point(field_get:foxglove.TriangleListPrimitive.colors)
  return colors_.Get(index);
}
inline ::foxglove::Color* TriangleListPrimitive::add_colors() {
  // @@protoc_insertion_point(field_add:foxglove.TriangleListPrimitive.colors)
  return colors_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::foxglove::Color >&
TriangleListPrimitive::colors() const {
  // @@protoc_insertion_point(field_list:foxglove.TriangleListPrimitive.colors)
  return colors_;
}

// repeated fixed32 indices = 5;
inline int TriangleListPrimitive::indices_size() const {
  return indices_.size();
}
inline void TriangleListPrimitive::clear_indices() {
  indices_.Clear();
}
inline ::google::protobuf::uint32 TriangleListPrimitive::indices(int index) const {
  // @@protoc_insertion_point(field_get:foxglove.TriangleListPrimitive.indices)
  return indices_.Get(index);
}
inline void TriangleListPrimitive::set_indices(int index, ::google::protobuf::uint32 value) {
  indices_.Set(index, value);
  // @@protoc_insertion_point(field_set:foxglove.TriangleListPrimitive.indices)
}
inline void TriangleListPrimitive::add_indices(::google::protobuf::uint32 value) {
  indices_.Add(value);
  // @@protoc_insertion_point(field_add:foxglove.TriangleListPrimitive.indices)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TriangleListPrimitive::indices() const {
  // @@protoc_insertion_point(field_list:foxglove.TriangleListPrimitive.indices)
  return indices_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TriangleListPrimitive::mutable_indices() {
  // @@protoc_insertion_point(field_mutable_list:foxglove.TriangleListPrimitive.indices)
  return &indices_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace foxglove

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_foxglove_2fTriangleListPrimitive_2eproto
