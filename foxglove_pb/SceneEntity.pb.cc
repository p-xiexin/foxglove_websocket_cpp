// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: foxglove/SceneEntity.proto

#include "foxglove/SceneEntity.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_foxglove_2fArrowPrimitive_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_foxglove_2fArrowPrimitive_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ArrowPrimitive;
}  // namespace protobuf_foxglove_2fArrowPrimitive_2eproto
namespace protobuf_foxglove_2fCubePrimitive_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_foxglove_2fCubePrimitive_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_CubePrimitive;
}  // namespace protobuf_foxglove_2fCubePrimitive_2eproto
namespace protobuf_foxglove_2fCylinderPrimitive_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_foxglove_2fCylinderPrimitive_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_CylinderPrimitive;
}  // namespace protobuf_foxglove_2fCylinderPrimitive_2eproto
namespace protobuf_foxglove_2fKeyValuePair_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_foxglove_2fKeyValuePair_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_KeyValuePair;
}  // namespace protobuf_foxglove_2fKeyValuePair_2eproto
namespace protobuf_foxglove_2fLinePrimitive_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_foxglove_2fLinePrimitive_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_LinePrimitive;
}  // namespace protobuf_foxglove_2fLinePrimitive_2eproto
namespace protobuf_foxglove_2fModelPrimitive_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_foxglove_2fModelPrimitive_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ModelPrimitive;
}  // namespace protobuf_foxglove_2fModelPrimitive_2eproto
namespace protobuf_foxglove_2fSpherePrimitive_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_foxglove_2fSpherePrimitive_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_SpherePrimitive;
}  // namespace protobuf_foxglove_2fSpherePrimitive_2eproto
namespace protobuf_foxglove_2fTextPrimitive_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_foxglove_2fTextPrimitive_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_TextPrimitive;
}  // namespace protobuf_foxglove_2fTextPrimitive_2eproto
namespace protobuf_foxglove_2fTriangleListPrimitive_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_foxglove_2fTriangleListPrimitive_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_TriangleListPrimitive;
}  // namespace protobuf_foxglove_2fTriangleListPrimitive_2eproto
namespace protobuf_google_2fprotobuf_2fduration_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2fduration_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Duration;
}  // namespace protobuf_google_2fprotobuf_2fduration_2eproto
namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_google_2fprotobuf_2ftimestamp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Timestamp;
}  // namespace protobuf_google_2fprotobuf_2ftimestamp_2eproto
namespace foxglove {
class SceneEntityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneEntity>
      _instance;
} _SceneEntity_default_instance_;
}  // namespace foxglove
namespace protobuf_foxglove_2fSceneEntity_2eproto {
static void InitDefaultsSceneEntity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::foxglove::_SceneEntity_default_instance_;
    new (ptr) ::foxglove::SceneEntity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::foxglove::SceneEntity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<11> scc_info_SceneEntity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 11, InitDefaultsSceneEntity}, {
      &protobuf_google_2fprotobuf_2ftimestamp_2eproto::scc_info_Timestamp.base,
      &protobuf_google_2fprotobuf_2fduration_2eproto::scc_info_Duration.base,
      &protobuf_foxglove_2fKeyValuePair_2eproto::scc_info_KeyValuePair.base,
      &protobuf_foxglove_2fArrowPrimitive_2eproto::scc_info_ArrowPrimitive.base,
      &protobuf_foxglove_2fCubePrimitive_2eproto::scc_info_CubePrimitive.base,
      &protobuf_foxglove_2fSpherePrimitive_2eproto::scc_info_SpherePrimitive.base,
      &protobuf_foxglove_2fCylinderPrimitive_2eproto::scc_info_CylinderPrimitive.base,
      &protobuf_foxglove_2fLinePrimitive_2eproto::scc_info_LinePrimitive.base,
      &protobuf_foxglove_2fTriangleListPrimitive_2eproto::scc_info_TriangleListPrimitive.base,
      &protobuf_foxglove_2fTextPrimitive_2eproto::scc_info_TextPrimitive.base,
      &protobuf_foxglove_2fModelPrimitive_2eproto::scc_info_ModelPrimitive.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SceneEntity.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::foxglove::SceneEntity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::foxglove::SceneEntity, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::foxglove::SceneEntity, frame_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::foxglove::SceneEntity, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::foxglove::SceneEntity, lifetime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::foxglove::SceneEntity, frame_locked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::foxglove::SceneEntity, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::foxglove::SceneEntity, arrows_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::foxglove::SceneEntity, cubes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::foxglove::SceneEntity, spheres_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::foxglove::SceneEntity, cylinders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::foxglove::SceneEntity, lines_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::foxglove::SceneEntity, triangles_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::foxglove::SceneEntity, texts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::foxglove::SceneEntity, models_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::foxglove::SceneEntity)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::foxglove::_SceneEntity_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "foxglove/SceneEntity.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\032foxglove/SceneEntity.proto\022\010foxglove\032\035"
      "foxglove/ArrowPrimitive.proto\032\034foxglove/"
      "CubePrimitive.proto\032 foxglove/CylinderPr"
      "imitive.proto\032\033foxglove/KeyValuePair.pro"
      "to\032\034foxglove/LinePrimitive.proto\032\035foxglo"
      "ve/ModelPrimitive.proto\032\036foxglove/Sphere"
      "Primitive.proto\032\034foxglove/TextPrimitive."
      "proto\032$foxglove/TriangleListPrimitive.pr"
      "oto\032\036google/protobuf/duration.proto\032\037goo"
      "gle/protobuf/timestamp.proto\"\243\004\n\013SceneEn"
      "tity\022-\n\ttimestamp\030\001 \001(\0132\032.google.protobu"
      "f.Timestamp\022\020\n\010frame_id\030\002 \001(\t\022\n\n\002id\030\003 \001("
      "\t\022+\n\010lifetime\030\004 \001(\0132\031.google.protobuf.Du"
      "ration\022\024\n\014frame_locked\030\005 \001(\010\022(\n\010metadata"
      "\030\006 \003(\0132\026.foxglove.KeyValuePair\022(\n\006arrows"
      "\030\007 \003(\0132\030.foxglove.ArrowPrimitive\022&\n\005cube"
      "s\030\010 \003(\0132\027.foxglove.CubePrimitive\022*\n\007sphe"
      "res\030\t \003(\0132\031.foxglove.SpherePrimitive\022.\n\t"
      "cylinders\030\n \003(\0132\033.foxglove.CylinderPrimi"
      "tive\022&\n\005lines\030\013 \003(\0132\027.foxglove.LinePrimi"
      "tive\0222\n\ttriangles\030\014 \003(\0132\037.foxglove.Trian"
      "gleListPrimitive\022&\n\005texts\030\r \003(\0132\027.foxglo"
      "ve.TextPrimitive\022(\n\006models\030\016 \003(\0132\030.foxgl"
      "ove.ModelPrimitiveb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 946);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "foxglove/SceneEntity.proto", &protobuf_RegisterTypes);
  ::protobuf_foxglove_2fArrowPrimitive_2eproto::AddDescriptors();
  ::protobuf_foxglove_2fCubePrimitive_2eproto::AddDescriptors();
  ::protobuf_foxglove_2fCylinderPrimitive_2eproto::AddDescriptors();
  ::protobuf_foxglove_2fKeyValuePair_2eproto::AddDescriptors();
  ::protobuf_foxglove_2fLinePrimitive_2eproto::AddDescriptors();
  ::protobuf_foxglove_2fModelPrimitive_2eproto::AddDescriptors();
  ::protobuf_foxglove_2fSpherePrimitive_2eproto::AddDescriptors();
  ::protobuf_foxglove_2fTextPrimitive_2eproto::AddDescriptors();
  ::protobuf_foxglove_2fTriangleListPrimitive_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_foxglove_2fSceneEntity_2eproto
namespace foxglove {

// ===================================================================

void SceneEntity::InitAsDefaultInstance() {
  ::foxglove::_SceneEntity_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  ::foxglove::_SceneEntity_default_instance_._instance.get_mutable()->lifetime_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
}
void SceneEntity::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
}
void SceneEntity::clear_lifetime() {
  if (GetArenaNoVirtual() == NULL && lifetime_ != NULL) {
    delete lifetime_;
  }
  lifetime_ = NULL;
}
void SceneEntity::clear_metadata() {
  metadata_.Clear();
}
void SceneEntity::clear_arrows() {
  arrows_.Clear();
}
void SceneEntity::clear_cubes() {
  cubes_.Clear();
}
void SceneEntity::clear_spheres() {
  spheres_.Clear();
}
void SceneEntity::clear_cylinders() {
  cylinders_.Clear();
}
void SceneEntity::clear_lines() {
  lines_.Clear();
}
void SceneEntity::clear_triangles() {
  triangles_.Clear();
}
void SceneEntity::clear_texts() {
  texts_.Clear();
}
void SceneEntity::clear_models() {
  models_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneEntity::kTimestampFieldNumber;
const int SceneEntity::kFrameIdFieldNumber;
const int SceneEntity::kIdFieldNumber;
const int SceneEntity::kLifetimeFieldNumber;
const int SceneEntity::kFrameLockedFieldNumber;
const int SceneEntity::kMetadataFieldNumber;
const int SceneEntity::kArrowsFieldNumber;
const int SceneEntity::kCubesFieldNumber;
const int SceneEntity::kSpheresFieldNumber;
const int SceneEntity::kCylindersFieldNumber;
const int SceneEntity::kLinesFieldNumber;
const int SceneEntity::kTrianglesFieldNumber;
const int SceneEntity::kTextsFieldNumber;
const int SceneEntity::kModelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneEntity::SceneEntity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_foxglove_2fSceneEntity_2eproto::scc_info_SceneEntity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:foxglove.SceneEntity)
}
SceneEntity::SceneEntity(const SceneEntity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      metadata_(from.metadata_),
      arrows_(from.arrows_),
      cubes_(from.cubes_),
      spheres_(from.spheres_),
      cylinders_(from.cylinders_),
      lines_(from.lines_),
      triangles_(from.triangles_),
      texts_(from.texts_),
      models_(from.models_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.frame_id().size() > 0) {
    frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_id_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_timestamp()) {
    timestamp_ = new ::google::protobuf::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = NULL;
  }
  if (from.has_lifetime()) {
    lifetime_ = new ::google::protobuf::Duration(*from.lifetime_);
  } else {
    lifetime_ = NULL;
  }
  frame_locked_ = from.frame_locked_;
  // @@protoc_insertion_point(copy_constructor:foxglove.SceneEntity)
}

void SceneEntity::SharedCtor() {
  frame_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frame_locked_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(frame_locked_));
}

SceneEntity::~SceneEntity() {
  // @@protoc_insertion_point(destructor:foxglove.SceneEntity)
  SharedDtor();
}

void SceneEntity::SharedDtor() {
  frame_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete timestamp_;
  if (this != internal_default_instance()) delete lifetime_;
}

void SceneEntity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SceneEntity::descriptor() {
  ::protobuf_foxglove_2fSceneEntity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_foxglove_2fSceneEntity_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneEntity& SceneEntity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_foxglove_2fSceneEntity_2eproto::scc_info_SceneEntity.base);
  return *internal_default_instance();
}


void SceneEntity::Clear() {
// @@protoc_insertion_point(message_clear_start:foxglove.SceneEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  arrows_.Clear();
  cubes_.Clear();
  spheres_.Clear();
  cylinders_.Clear();
  lines_.Clear();
  triangles_.Clear();
  texts_.Clear();
  models_.Clear();
  frame_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
  if (GetArenaNoVirtual() == NULL && lifetime_ != NULL) {
    delete lifetime_;
  }
  lifetime_ = NULL;
  frame_locked_ = false;
  _internal_metadata_.Clear();
}

bool SceneEntity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:foxglove.SceneEntity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .google.protobuf.Timestamp timestamp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string frame_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_frame_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->frame_id().data(), static_cast<int>(this->frame_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "foxglove.SceneEntity.frame_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "foxglove.SceneEntity.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration lifetime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lifetime()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool frame_locked = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &frame_locked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .foxglove.KeyValuePair metadata = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .foxglove.ArrowPrimitive arrows = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_arrows()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .foxglove.CubePrimitive cubes = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cubes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .foxglove.SpherePrimitive spheres = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_spheres()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .foxglove.CylinderPrimitive cylinders = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_cylinders()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .foxglove.LinePrimitive lines = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_lines()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .foxglove.TriangleListPrimitive triangles = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_triangles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .foxglove.TextPrimitive texts = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_texts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .foxglove.ModelPrimitive models = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_models()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:foxglove.SceneEntity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:foxglove.SceneEntity)
  return false;
#undef DO_
}

void SceneEntity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:foxglove.SceneEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_timestamp(), output);
  }

  // string frame_id = 2;
  if (this->frame_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->frame_id().data(), static_cast<int>(this->frame_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "foxglove.SceneEntity.frame_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->frame_id(), output);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "foxglove.SceneEntity.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->id(), output);
  }

  // .google.protobuf.Duration lifetime = 4;
  if (this->has_lifetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_lifetime(), output);
  }

  // bool frame_locked = 5;
  if (this->frame_locked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->frame_locked(), output);
  }

  // repeated .foxglove.KeyValuePair metadata = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->metadata(static_cast<int>(i)),
      output);
  }

  // repeated .foxglove.ArrowPrimitive arrows = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrows_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->arrows(static_cast<int>(i)),
      output);
  }

  // repeated .foxglove.CubePrimitive cubes = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cubes_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->cubes(static_cast<int>(i)),
      output);
  }

  // repeated .foxglove.SpherePrimitive spheres = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spheres_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->spheres(static_cast<int>(i)),
      output);
  }

  // repeated .foxglove.CylinderPrimitive cylinders = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cylinders_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->cylinders(static_cast<int>(i)),
      output);
  }

  // repeated .foxglove.LinePrimitive lines = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lines_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11,
      this->lines(static_cast<int>(i)),
      output);
  }

  // repeated .foxglove.TriangleListPrimitive triangles = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->triangles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12,
      this->triangles(static_cast<int>(i)),
      output);
  }

  // repeated .foxglove.TextPrimitive texts = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->texts_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13,
      this->texts(static_cast<int>(i)),
      output);
  }

  // repeated .foxglove.ModelPrimitive models = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->models_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14,
      this->models(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:foxglove.SceneEntity)
}

::google::protobuf::uint8* SceneEntity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:foxglove.SceneEntity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_timestamp(), deterministic, target);
  }

  // string frame_id = 2;
  if (this->frame_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->frame_id().data(), static_cast<int>(this->frame_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "foxglove.SceneEntity.frame_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->frame_id(), target);
  }

  // string id = 3;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "foxglove.SceneEntity.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->id(), target);
  }

  // .google.protobuf.Duration lifetime = 4;
  if (this->has_lifetime()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_lifetime(), deterministic, target);
  }

  // bool frame_locked = 5;
  if (this->frame_locked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->frame_locked(), target);
  }

  // repeated .foxglove.KeyValuePair metadata = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->metadata(static_cast<int>(i)), deterministic, target);
  }

  // repeated .foxglove.ArrowPrimitive arrows = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->arrows_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->arrows(static_cast<int>(i)), deterministic, target);
  }

  // repeated .foxglove.CubePrimitive cubes = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cubes_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->cubes(static_cast<int>(i)), deterministic, target);
  }

  // repeated .foxglove.SpherePrimitive spheres = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->spheres_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->spheres(static_cast<int>(i)), deterministic, target);
  }

  // repeated .foxglove.CylinderPrimitive cylinders = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->cylinders_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->cylinders(static_cast<int>(i)), deterministic, target);
  }

  // repeated .foxglove.LinePrimitive lines = 11;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->lines_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->lines(static_cast<int>(i)), deterministic, target);
  }

  // repeated .foxglove.TriangleListPrimitive triangles = 12;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->triangles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->triangles(static_cast<int>(i)), deterministic, target);
  }

  // repeated .foxglove.TextPrimitive texts = 13;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->texts_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->texts(static_cast<int>(i)), deterministic, target);
  }

  // repeated .foxglove.ModelPrimitive models = 14;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->models_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->models(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:foxglove.SceneEntity)
  return target;
}

size_t SceneEntity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:foxglove.SceneEntity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .foxglove.KeyValuePair metadata = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->metadata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->metadata(static_cast<int>(i)));
    }
  }

  // repeated .foxglove.ArrowPrimitive arrows = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->arrows_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->arrows(static_cast<int>(i)));
    }
  }

  // repeated .foxglove.CubePrimitive cubes = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->cubes_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cubes(static_cast<int>(i)));
    }
  }

  // repeated .foxglove.SpherePrimitive spheres = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->spheres_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->spheres(static_cast<int>(i)));
    }
  }

  // repeated .foxglove.CylinderPrimitive cylinders = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->cylinders_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->cylinders(static_cast<int>(i)));
    }
  }

  // repeated .foxglove.LinePrimitive lines = 11;
  {
    unsigned int count = static_cast<unsigned int>(this->lines_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->lines(static_cast<int>(i)));
    }
  }

  // repeated .foxglove.TriangleListPrimitive triangles = 12;
  {
    unsigned int count = static_cast<unsigned int>(this->triangles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->triangles(static_cast<int>(i)));
    }
  }

  // repeated .foxglove.TextPrimitive texts = 13;
  {
    unsigned int count = static_cast<unsigned int>(this->texts_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->texts(static_cast<int>(i)));
    }
  }

  // repeated .foxglove.ModelPrimitive models = 14;
  {
    unsigned int count = static_cast<unsigned int>(this->models_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->models(static_cast<int>(i)));
    }
  }

  // string frame_id = 2;
  if (this->frame_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->frame_id());
  }

  // string id = 3;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .google.protobuf.Timestamp timestamp = 1;
  if (this->has_timestamp()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *timestamp_);
  }

  // .google.protobuf.Duration lifetime = 4;
  if (this->has_lifetime()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *lifetime_);
  }

  // bool frame_locked = 5;
  if (this->frame_locked() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SceneEntity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:foxglove.SceneEntity)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneEntity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneEntity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:foxglove.SceneEntity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:foxglove.SceneEntity)
    MergeFrom(*source);
  }
}

void SceneEntity::MergeFrom(const SceneEntity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:foxglove.SceneEntity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  arrows_.MergeFrom(from.arrows_);
  cubes_.MergeFrom(from.cubes_);
  spheres_.MergeFrom(from.spheres_);
  cylinders_.MergeFrom(from.cylinders_);
  lines_.MergeFrom(from.lines_);
  triangles_.MergeFrom(from.triangles_);
  texts_.MergeFrom(from.texts_);
  models_.MergeFrom(from.models_);
  if (from.frame_id().size() > 0) {

    frame_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.frame_id_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
  if (from.has_lifetime()) {
    mutable_lifetime()->::google::protobuf::Duration::MergeFrom(from.lifetime());
  }
  if (from.frame_locked() != 0) {
    set_frame_locked(from.frame_locked());
  }
}

void SceneEntity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:foxglove.SceneEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneEntity::CopyFrom(const SceneEntity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:foxglove.SceneEntity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneEntity::IsInitialized() const {
  return true;
}

void SceneEntity::Swap(SceneEntity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneEntity::InternalSwap(SceneEntity* other) {
  using std::swap;
  CastToBase(&metadata_)->InternalSwap(CastToBase(&other->metadata_));
  CastToBase(&arrows_)->InternalSwap(CastToBase(&other->arrows_));
  CastToBase(&cubes_)->InternalSwap(CastToBase(&other->cubes_));
  CastToBase(&spheres_)->InternalSwap(CastToBase(&other->spheres_));
  CastToBase(&cylinders_)->InternalSwap(CastToBase(&other->cylinders_));
  CastToBase(&lines_)->InternalSwap(CastToBase(&other->lines_));
  CastToBase(&triangles_)->InternalSwap(CastToBase(&other->triangles_));
  CastToBase(&texts_)->InternalSwap(CastToBase(&other->texts_));
  CastToBase(&models_)->InternalSwap(CastToBase(&other->models_));
  frame_id_.Swap(&other->frame_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(timestamp_, other->timestamp_);
  swap(lifetime_, other->lifetime_);
  swap(frame_locked_, other->frame_locked_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SceneEntity::GetMetadata() const {
  protobuf_foxglove_2fSceneEntity_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_foxglove_2fSceneEntity_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace foxglove
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::foxglove::SceneEntity* Arena::CreateMaybeMessage< ::foxglove::SceneEntity >(Arena* arena) {
  return Arena::CreateInternal< ::foxglove::SceneEntity >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
